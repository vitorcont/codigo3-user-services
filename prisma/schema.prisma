// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(dbgenerated())
  email     String    @unique
  name      String
  password  String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  travels Travel[]

  @@map("user")
}

model Travel {
  id                   Int       @id @default(dbgenerated())
  userId               String    @map("user_id")
  priority             Int
  originLatitude       Float     @map("origin_latitude")
  originLongitude      Float     @map("origin_longitude")
  destinationLatitude  Float     @map("destination_latitude")
  destinationLongitude Float     @map("destination_longitude")
  compressedRoute      String?
  departedAt           DateTime? @map("departed_at")
  arrivedAt            DateTime? @map("arrived_at")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  user User @relation(fields: [userId], references: [id])

  @@map("travel")
}

model TrafficController {
  id             String    @id @default(dbgenerated())
  intersectionId String    @map("intersection_id")
  token          String
  latitude       Float
  longitude      Float
  direction      Int
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  deletedAt      DateTime? @map("deleted_at")

  @@map("traffic_controller")
}
